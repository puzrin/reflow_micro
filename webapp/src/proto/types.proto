syntax = "proto3";

enum Constants {
  CONSTANT_UNSPECIFIED = 0;
  // Initial temperature for all profiles
  START_TEMPERATURE = 30;
  // Static sizes for repeated/maps
  MAX_REFLOW_PROFILES = 10;
}

enum DeviceState {
  DEVICE_STATE_UNSPECIFIED = 0;
  Idle = 1;
  Reflow = 2;
  SensorBake = 3;
  AdrcTest = 4;
  StepResponse = 5;
}

message Segment {
  // Target temperature in Celsius
  int32 target = 1;
  // Duration in seconds
  int32 duration = 2;
}

message Profile {
  // Unique profile identifier
  int32 id = 1;
  // Profile name
  string name = 2;
  // Temperature segments sequence
  repeated Segment segments = 3;
}

message ProfilesData {
  // Available profiles
  repeated Profile items = 1;
  // Currently selected profile id
  int32 selectedId = 2;
}

message Point {
  int32 x = 1;
  int32 y = 2;
}

message HistoryChunk {
  int32 type = 1;
  int32 version = 2;
  repeated Point data = 3;
}


message AdrcParams {
  // System response time (when temperature reaches 63% of final value)
  float response = 1;
  // Scale. Max derivative / power
  float b0 = 2;
  // ω_observer = N / τ. Usually 3..10
  // 5 is good for the start. Increase until oscillates, then back 10-20%.
  float N = 3;
  // ω_controller = ω_observer / M. Usually 2..5
  // 3 is a good for the start. Probably, changes not required.
  float M = 4;
}

message SensorCalibrationPoint {
  // Real temperature
  float temperature = 1;
  // Sensor voltage
  float sensor_value = 2;
}

message SensorParams {
  map<uint32, SensorCalibrationPoint> points = 1;
}


message HeaterConfigs {
  map<uint32, AdrcParams> adrc = 1;
  map<uint32, SensorParams> sensor = 2;
}